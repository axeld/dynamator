/***********************************************************************
*   Copyright 2000-2004 by Jay Dunning.
*   All rights reserved.
*
*   Redistribution and use in source and binary forms, with or without
*   modification, are permitted provided that the following conditions 
*   are met:
*
*   1.  Redistributions of source code must retain the above copyright
*       notice, this list of conditions, and the following disclaimer.
*
*   2.  Redistributions in binary form must reproduce the above
*       copyright notice, this list of conditions, and the following
*       disclaimer in the documentation and/or other materials provided
*       with the distribution.
*
*   THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
*   WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
*   OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
*   DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR ANY CONTRIBUTORS
*   BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY,
*   OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
*   PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
*   PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY
*   OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
*   (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE
*   USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF 
*   SUCH DAMAGE.
***********************************************************************/

package dynamator.none;

import java.util.Date;

public
class Generator
extends dynamator.Generator
{
//    private static final String rcsID_ = 
//        "$Id: Generator.java,v 1.7 2004/02/24 07:47:05 jaydunning Exp $";
    
    public
    void
    outputDynamicValueExpression(
        String value
        )
    {
        outputRaw(value);
    }
    
    public
    void
    start(
        boolean produceGenerationComment
        )
    {}
    
    public
    void
    end(
        boolean produceGenerationComment
        )
    {
        if ( produceGenerationComment )
        {
            outputRaw(options_.commentStart);
            outputRaw(" generated by Dynamator ");
            outputRaw(String.valueOf(new Date()));
            outputRaw(" ");
            if ( options_.commentEnd != null )
            {
                outputRaw(options_.commentEnd);
            }
            endTemplateLine(true);
        }
    }
    
    public
    Object          // if-expression
    startIfBlock(
        String expression,
        boolean newLine
        )
    {
        error("<if> not available");
        return null;
    }
    
    public
    void
    endIfBlock(
        Object startResult,
        boolean newLine
        )
    {}
    
    public
    Object
    startCollectionIterationBlock(
        String collectionExpression,
        String collectionTypeString, 
        String elementName,
        String iName,
        String collectionName
        )
    {
        error("<foreach> not available");
        return null;
    }
    
    public
    void
    endCollectionIterationBlock(
        Object nothing
        )
    {}

    public
    Object
    startSequencedIterationBlock(
        String i,
        String first,
        String last, 
        String step
        )
    {
        error("<foreach> not available");
        return null;
    }
    
    public
    void
    endSequencedIterationBlock(
        Object nothing
        )
    {}

    public
    Object
    startForBlock(
        String expression
        )
    {
        error("<for> not available");
        return null;
    }
    
    public
    void
    endForBlock(
        Object nothing
        )
    {}
}
