<!-- generated by Dynamator Sat Jan 31 15:07:24 CST 2004 --><xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
    <xsl:preserve-space elements="*"/>
    <xsl:output method="text"/>
    
    <xsl:key name="attributes" match="attr" use="@name"/>
    
    <xsl:variable name="keyattrs" select="type/attr[@key]"/>
    
    <xsl:template name="interfaces">
    <xsl:param name="interfaces"/>
    
      <xsl:variable name="car" 
          select="substring-before(interfaces, ',')"/>
      <xsl:variable name="cdr"
          select="substring-after(interfaces, ',')"/>
      
      <xsl:choose>
        <xsl:when test="$car!=''">
          <xsl:value-of select="normalize-space($car)"/>
          <xsl:text>, 
        </xsl:text>
          <xsl:call-template name="interfaces">
            <xsl:with-param name="interfaces" select="$cdr"/>
          </xsl:call-template>
        </xsl:when>
       <xsl:otherwise>
          <xsl:value-of select="normalize-space($interfaces)"/>
          <xsl:if test="position()!=last()"><xsl:text>, 
        </xsl:text></xsl:if>
        </xsl:otherwise>
      </xsl:choose>
    </xsl:template>
    <xsl:template match="type">
  
package <xsl:value-of select="@package"/>;

import java.io.Serializable;

/**<xsl:text>
    </xsl:text><xsl:value-of select="@short-description"/><xsl:text>
    </xsl:text><xsl:if test="description"><xsl:text>
    </xsl:text>&lt;p&gt;&lt;/p&gt;<xsl:text>
    </xsl:text><xsl:value-of select="description"/></xsl:if><xsl:text>
    </xsl:text><xsl:if test="sort-attrs"><xsl:text>
    </xsl:text>&lt;p&gt;
    The natural ordering of objects of this type is determined by<xsl:text>
    </xsl:text><xsl:choose><xsl:when test="count(sort-attrs/sort-attr) = 1">
    the value of the <xsl:value-of select="sort-attrs/sort-attr/@name"/> attribute.</xsl:when><xsl:when test="count(sort-attrs/sort-attr) = 2">
    the value of the <xsl:value-of select="sort-attrs/sort-attr/@name"/> and <xsl:value-of select="sort-attrs/sort-attr[last()]/@name"/> attributes.</xsl:when><xsl:otherwise>
    the value of attributes <xsl:for-each select="sort-attrs/sort-attr"><xsl:text>
    </xsl:text><xsl:if test="position() = last()">and </xsl:if><xsl:text>
    </xsl:text><xsl:value-of select="@name"/><xsl:if test="position() = last()">, </xsl:if></xsl:for-each>.</xsl:otherwise></xsl:choose><xsl:text>
    </xsl:text>&lt;/p&gt;</xsl:if>
**/
public 
interface <xsl:value-of select="@simple-class-name"/>
extends <xsl:if test="@interfaces">
      <xsl:call-template name="interfaces">
        <xsl:with-param name="interfaces" select="@interfaces"/>
      </xsl:call-template>
    </xsl:if>
{<xsl:for-each select="attr">

    /**<xsl:text>
        </xsl:text><xsl:value-of select="@short-description"/><xsl:if test="description"><xsl:text>
        </xsl:text>&lt;p&gt;&lt;/p&gt;<xsl:text>
        </xsl:text><xsl:value-of select="description"/></xsl:if>
    **/    <xsl:text>
    </xsl:text><xsl:value-of select="@datatype"/><xsl:text>
    </xsl:text><xsl:value-of select="@accessor-name"/>();</xsl:for-each>
}<xsl:text>
</xsl:text>
    </xsl:template>
  </xsl:stylesheet>