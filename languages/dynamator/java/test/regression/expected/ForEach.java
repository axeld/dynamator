// generated by Dynamator Tue Jan 20 14:44:12 CST 2004

import java.io.IOException;
import java.io.PrintWriter;
import java.util.*;
import javax.servlet.http.*;

public class ForEach
extends HttpServlet
{
    public static class
    EnumerationIterator
    implements Iterator
    {
        Enumeration e_;
        
        public EnumerationIterator(Enumeration e)
        {
            e_ = e;
        }
        
        public boolean hasNext() { return e_.hasMoreElements(); }
        public Object next() { return e_.nextElement(); }
        public void remove() {}
    }

    public 
    void
    doGet(
        HttpServletRequest request,
        HttpServletResponse response
        )
    throws IOException
    {
        PrintWriter out = response.getWriter();
        response.setContentType("text/html");

        output(out);
    }
    
    public static void main(String[] args)
    {
        output(new PrintWriter(System.out, true));
    }
    
    public static
    void
    output(
        PrintWriter out
        )
    {
        Vector v = new Vector();
        v.addElement("a");
        v.addElement("b");
        v.addElement("c");
        v.addElement("d");
        out.write("<html>\n");
        out.write("  <head>\n");
        out.write("    <title></title>\n");
        out.write("  </head>\n");
        out.write("  <body>\n");
        {
            final java.util.Locale[] $javaUtilLocaleAvailableLocales = java.util.Locale.getAvailableLocales();
            final int lim$javaUtilLocaleAvailableLocales = $javaUtilLocaleAvailableLocales.length;
            java.util.Locale locale;
            for ( int i$javaUtilLocaleAvailableLocales = 0; i$javaUtilLocaleAvailableLocales < lim$javaUtilLocaleAvailableLocales; ++i$javaUtilLocaleAvailableLocales )
            {
                locale = $javaUtilLocaleAvailableLocales[i$javaUtilLocaleAvailableLocales];
                out.write("    <p id=\"Array1\">");
                    out.write(String.valueOf(locale));
                    out.write("</p>\n");

            }
        }
        {
            final java.util.Locale[] $javaUtilLocaleAvailableLocales = java.util.Locale.getAvailableLocales();
            final int lim$javaUtilLocaleAvailableLocales = $javaUtilLocaleAvailableLocales.length;
            java.util.Locale locale;
            for ( int iLocale = 0; iLocale < lim$javaUtilLocaleAvailableLocales; ++iLocale )
            {
                locale = $javaUtilLocaleAvailableLocales[iLocale];
                out.write("    <p id=\"Array2\">");
                    out.write(String.valueOf(locale));
                    out.write("</p>\n");

            }
        }
        {
            final java.util.Locale[] locales = java.util.Locale.getAvailableLocales();
            final int limLocales = locales.length;
            java.util.Locale locale;
            for ( int iLocale = 0; iLocale < limLocales; ++iLocale )
            {
                locale = locales[iLocale];
                out.write("    <p id=\"Array3\">");
                    out.write(String.valueOf(locale));
                    out.write("</p>\n");

            }
        }
        {
            final java.util.Vector $v = v;
            final int lim$v = $v.size();
            String item;
            for ( int i$v = 0; i$v < lim$v; ++i$v )
            {
                item = (String) $v.elementAt(i$v);
                out.write("    <p id=\"Vector1\">");
                    out.write(String.valueOf(item));
                    out.write("</p>\n");

            }
        }
        {
            final java.util.Vector $v = v;
            final int lim$v = $v.size();
            String item;
            for ( int iItem = 0; iItem < lim$v; ++iItem )
            {
                item = (String) $v.elementAt(iItem);
                out.write("    <p id=\"Vector2\">");
                    out.write(String.valueOf(item));
                    out.write("</p>\n");

            }
        }
        {
            final java.util.Vector items = v;
            final int limItems = items.size();
            String item;
            for ( int iItem = 0; iItem < limItems; ++iItem )
            {
                item = (String) items.elementAt(iItem);
                out.write("    <p id=\"Vector3\">");
                    out.write(String.valueOf(item));
                    out.write("</p>\n");

            }
        }
        {
            final java.util.Enumeration $systemPropertiesPropertyNames = System.getProperties().propertyNames();
            String name;
            while ( $systemPropertiesPropertyNames.hasMoreElements() )
            {
                name = (String) $systemPropertiesPropertyNames.nextElement();
                out.write("    <p id=\"Enumeration1\">");
                    out.write(String.valueOf(name));
                    out.write("</p>\n");

            }
        }
        {
            final java.util.Enumeration $systemPropertiesPropertyNames = System.getProperties().propertyNames();
            String name;
            int iName = -1;
            while ( $systemPropertiesPropertyNames.hasMoreElements() )
            {
                name = (String) $systemPropertiesPropertyNames.nextElement();
                ++iName;
                out.write("    <p id=\"Enumeration2\">");
                    out.write(String.valueOf(name));
                    out.write("</p>\n");

            }
        }
        {
            final java.util.Enumeration names = System.getProperties().propertyNames();
            String name;
            int iName = -1;
            while ( names.hasMoreElements() )
            {
                name = (String) names.nextElement();
                ++iName;
                out.write("    <p id=\"Enumeration3\">");
                    out.write(String.valueOf(name));
                    out.write("</p>\n");

            }
        }
        {
            final java.util.Iterator $newEnumerationIteratorSystemPropertiesPropertyNames = new EnumerationIterator(System.getProperties().propertyNames());
            String name;
            while ( $newEnumerationIteratorSystemPropertiesPropertyNames.hasNext() )
            {
                name = (String) $newEnumerationIteratorSystemPropertiesPropertyNames.next();
                out.write("    <p id=\"Iterator1\">");
                    out.write(String.valueOf(name));
                    out.write("</p>\n");

            }
        }
        {
            final java.util.Iterator $newEnumerationIteratorSystemPropertiesPropertyNames = new EnumerationIterator(System.getProperties().propertyNames());
            String name;
            int iName = -1;
            while ( $newEnumerationIteratorSystemPropertiesPropertyNames.hasNext() )
            {
                name = (String) $newEnumerationIteratorSystemPropertiesPropertyNames.next();
                ++iName;
                out.write("    <p id=\"Iterator2\">");
                    out.write(String.valueOf(name));
                    out.write("</p>\n");

            }
        }
        {
            final java.util.Iterator names = new EnumerationIterator(System.getProperties().propertyNames());
            String name;
            int iName = -1;
            while ( names.hasNext() )
            {
                name = (String) names.next();
                ++iName;
                out.write("    <p id=\"Iterator3\">");
                    out.write(String.valueOf(name));
                    out.write("</p>\n");

            }
        }
        {
            final java.util.Dictionary $systemProperties = System.getProperties();
            String property;
            String propertyKey;
            final java.util.Enumeration $systemPropertiesKeys = $systemProperties.keys();
            while ( $systemPropertiesKeys.hasMoreElements() )
            {
                propertyKey = (String) $systemPropertiesKeys.nextElement();
                property = (String) $systemProperties.get(propertyKey);
                out.write("    <p id=\"Dictionary1\">");
                    out.write(String.valueOf(property));
                    out.write("</p>\n");

            }
        }
        {
            final java.util.Dictionary $systemProperties = System.getProperties();
            String property;
            String propertyKey;
            final java.util.Enumeration $systemPropertiesKeys = $systemProperties.keys();
            int iProperty = -1;
            while ( $systemPropertiesKeys.hasMoreElements() )
            {
                propertyKey = (String) $systemPropertiesKeys.nextElement();
                property = (String) $systemProperties.get(propertyKey);
                ++iProperty;
                out.write("    <p id=\"Dictionary2\">");
                    out.write(String.valueOf(property));
                    out.write("</p>\n");

            }
        }
        {
            final java.util.Dictionary d = System.getProperties();
            String property;
            String propertyKey;
            final java.util.Enumeration dKeys = d.keys();
            int iProperty = -1;
            while ( dKeys.hasMoreElements() )
            {
                propertyKey = (String) dKeys.nextElement();
                property = (String) d.get(propertyKey);
                ++iProperty;
                out.write("    <p id=\"Dictionary3\">");
                    out.write(String.valueOf(property));
                    out.write("</p>\n");

            }
        }
        {
            final java.util.Map $systemProperties = System.getProperties();
            java.util.Map.Entry property;
            String propertyKey;
            String propertyValue;
            final java.util.Iterator $systemPropertiesEntries = $systemProperties.entrySet().iterator();
            while ( $systemPropertiesEntries.hasNext() )
            {
                property = (java.util.Map.Entry) $systemPropertiesEntries.next();
                propertyKey = (String) property.getKey();
                propertyValue = (String) property.getValue();
                out.write("    <p id=\"Map1\">");
                    out.write(String.valueOf(property));
                    out.write("</p>\n");

            }
        }
        {
            final java.util.Map $systemProperties = System.getProperties();
            java.util.Map.Entry property;
            String propertyKey;
            String propertyValue;
            final java.util.Iterator $systemPropertiesEntries = $systemProperties.entrySet().iterator();
            int iProperty = -1;
            while ( $systemPropertiesEntries.hasNext() )
            {
                property = (java.util.Map.Entry) $systemPropertiesEntries.next();
                propertyKey = (String) property.getKey();
                propertyValue = (String) property.getValue();
                ++iProperty;
                out.write("    <p id=\"Map2\">");
                    out.write(String.valueOf(property));
                    out.write("</p>\n");

            }
        }
        {
            final java.util.Map d = System.getProperties();
            java.util.Map.Entry property;
            String propertyKey;
            String propertyValue;
            final java.util.Iterator dEntries = d.entrySet().iterator();
            int iProperty = -1;
            while ( dEntries.hasNext() )
            {
                property = (java.util.Map.Entry) dEntries.next();
                propertyKey = (String) property.getKey();
                propertyValue = (String) property.getValue();
                ++iProperty;
                out.write("    <p id=\"Map3\">");
                    out.write(String.valueOf(property));
                    out.write("</p>\n");

            }
        }
        {
            final java.util.Properties $systemProperties = System.getProperties();
            String property;
            String propertyName;
            final java.util.Enumeration $systemPropertiesNames = $systemProperties.propertyNames();
            while ( $systemPropertiesNames.hasMoreElements() )
            {
                propertyName = (String) $systemPropertiesNames.nextElement();
                property = $systemProperties.getProperty(propertyName);
                out.write("    <p id=\"Properties1\">");
                    out.write(String.valueOf(property));
                    out.write("</p>\n");

            }
        }
        {
            final java.util.Properties $systemProperties = System.getProperties();
            String property;
            String propertyName;
            final java.util.Enumeration $systemPropertiesNames = $systemProperties.propertyNames();
            int iProperty = -1;
            while ( $systemPropertiesNames.hasMoreElements() )
            {
                propertyName = (String) $systemPropertiesNames.nextElement();
                property = $systemProperties.getProperty(propertyName);
                ++iProperty;
                out.write("    <p id=\"Properties2\">");
                    out.write(String.valueOf(property));
                    out.write("</p>\n");

            }
        }
        {
            final java.util.Properties properties = System.getProperties();
            String property;
            String propertyName;
            final java.util.Enumeration propertiesNames = properties.propertyNames();
            int iProperty = -1;
            while ( propertiesNames.hasMoreElements() )
            {
                propertyName = (String) propertiesNames.nextElement();
                property = properties.getProperty(propertyName);
                ++iProperty;
                out.write("    <p id=\"Properties3\">");
                    out.write(String.valueOf(property));
                    out.write("</p>\n");

            }
        }
        out.write("  </body>\n");
        out.write("</html>\n");

        out.flush();
        out.close();
    }
}
